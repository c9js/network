/*▄────────────────────▄
  █                    █
  █  Загрузка модулей  █
  █                    █
  ▀────────────────────▀*/
const { Scanner } = require('l2raw'); // Работа с RAW-пакетами на уровне L2

/*▄────────────────────▄
  █                    █
  █  Создает приемник  █
  █                    █
  ▀────────────────────▀*/
module.exports = class {
/*┌───────────────────────────────┐
  │ Очередь для получения пакетов │
  └───────────────────────────────┘*/
    list = []
    
/*┌─────────────┐
  │ Конструктор │
  └─────────────┘*/
    constructor(ctx) {
    // Сохраняем родительский контекст
        this.ctx = ctx;
        
    // Создаем приемник
        this.scanner = new Scanner({
            iface: this.ctx.options.iface, // Имя сетевого интерфейса
        });
        
    // Добавляем обработчик получения пакетов
        this.scanner.on('data', this.data);
    }
    
/*┌──────────────────────────────┐
  │ Обработчик получения пакетов │
  └──────────────────────────────┘*/
    data = (packetBuffer) => this.ctx.cryptoBuffer.addPacket(this.list, packetBuffer)
};
